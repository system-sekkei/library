plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.dddjava.jig-gradle-plugin' version '2023.6.3'
    id "org.sonarqube" version "4.2.1.3168"
    id "jacoco"
}

sourceCompatibility = '17'

sourceSets {
    main {
        resources.srcDirs = ["src/main/java", "src/main/resources"]
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'

    testImplementation 'com.github.irof:jig-erd:latest.release'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-tracing-bridge-otel'
    runtimeOnly 'io.opentelemetry:opentelemetry-exporter-zipkin'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.seleniumhq.selenium:selenium-java:4.10.0'
    testImplementation 'com.codeborne:selenide:6.16.0'


}

tasks.named('test') {
    useJUnitPlatform()
}

classes.mustRunAfter(clean)
jigReports.dependsOn(clean, classes)

sonar {
    properties {
        property "sonar.projectKey", "system-sekkei_library"
        property "sonar.organization", "system-sekkei"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportPaths", "build/test-results/test/TEST-*.xml"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}
