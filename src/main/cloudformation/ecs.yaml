AWSTemplateFormatVersion: "2010-09-09"
Description: "library ecs"
Parameters:
  Flavor:
    Type: String
    Default: library
  Tier:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
  VpcStack:
    Type: String
    Default: "library-vpc"
  AlbStack:
    Type: String
    Default: "library-alb"

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Flavor}-cluster"
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Flavor
          Value: !Ref Flavor
  WebContainerRepository:
   Type: AWS::ECR::Repository
   DeletionPolicy: Retain # 手動で削除する
   Properties:
     RepositoryName: !Sub "${Flavor}-web"
     ImageTagMutability: MUTABLE
     LifecyclePolicy:
       LifecyclePolicyText: |
         {
           "rules": [
             {
               "rulePriority": 1,
               "description": "delete untagged image",
               "selection": {
                 "tagStatus": "untagged",
                 "countType": "imageCountMoreThan",
                 "countNumber": 3
               },
               "action": {
                 "type": "expire"
               }
             }
           ]
         }
  WebServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Flavor}-${Tier}-ecs-web-service-security-group"
      GroupDescription: !Sub "${Flavor} web Service SecurityGroup"
      VpcId: !ImportValue
        Fn::Sub: "${VpcStack}:VPC"
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: all egress allowed
          IpProtocol: -1
      SecurityGroupIngress:
        - Description: ingress from alb
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !ImportValue
            Fn::Sub: "${AlbStack}:PublicALBSecurityGroup"
      Tags:
        - Key: Flavor
          Value: !Ref Flavor
        - Key: Name
          Value: !Sub "${Flavor}-${Tier}-ecs-web-service-security-group"

Outputs:
  Cluster:
    Value: !Ref Cluster
    Export:
      Name: !Sub "${AWS::StackName}:Cluster"
  WebContainerRepository:
    Value: !Ref WebContainerRepository
    Export:
      Name: !Sub "${AWS::StackName}:WebContainerRepository"
  WebServiceSecurityGroup:
    Value: !Ref WebServiceSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}:WebServiceSecurityGroup"
