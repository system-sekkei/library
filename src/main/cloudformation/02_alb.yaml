AWSTemplateFormatVersion: "2010-09-09"
Description: "library alb"
Parameters:
  Flavor:
    Type: String
    Default: library
  EnvironmentName:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
  VpcStack:
    Type: String
    Default: "library-vpc"
  SslCertificateArn:
    Type: String

Resources:
  PublicALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Flavor}-${EnvironmentName}-public-alb-security-group"
      GroupDescription: !Sub "${Flavor} ${EnvironmentName} public ALB SecurityGroup"
      VpcId: !ImportValue
        Fn::Sub: "${VpcStack}:VPC"
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: all egress allowed
          IpProtocol: -1
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: https ingress
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      Tags:
        - Key: Flavor
          Value: !Ref Flavor
        - Key: Name
          Value: !Sub "${Flavor}-${EnvironmentName}-public-alb-security-group"
  PublicALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${Flavor}-alb"
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4
      SecurityGroups:
        - !Ref PublicALBSecurityGroup
      Subnets:
        - !ImportValue
          Fn::Sub: "${VpcStack}:PublicSubnet1"
        - !ImportValue
          Fn::Sub: "${VpcStack}:PublicSubnet2"
      Tags:
        - Key: Flavor
          Value: !Ref Flavor
  PublicALBHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref PublicALB
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref SslCertificateArn
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            StatusCode: 418
            MessageBody: Would you like a cup of coffee?
Outputs:
  PublicALB:
    Value: !Ref PublicALB
    Export:
      Name: !Sub "${AWS::StackName}:PublicALB"
  PublicALBHttpsListener:
    Value: !Ref PublicALBHttpsListener
    Export:
      Name: !Sub "${AWS::StackName}:PublicALBHttpsListener"
  PublicALBSecurityGroup:
    Value: !Ref PublicALBSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}:PublicALBSecurityGroup"
  PublicALBDNSName:
    Value: !GetAtt PublicALB.DNSName
