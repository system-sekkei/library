version: 2
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.0
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y graphviz fonts-ipafont imagemagick

      - restore_cache:
          keys:
            - gradle-dependencies-{{ checksum "build.gradle" }}
      - run: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-dependencies-{{ checksum "build.gradle" }}

      - run: ./gradlew build jig

      - run: sudo mkdir converted
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/package-relation-depth5.svg converted/package-relation-depth5.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/category.svg converted/category.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/category-usage.svg converted/category-usage.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/service-method-call-hierarchy.svg converted/service-method-call-hierarchy.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/composite-usecase.svg converted/composite-usecase.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/business-rule-core.svg converted/business-rule-core.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig/business-rule-overconcentration.svg converted/business-rule-overconcentration.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig-erd-overview.svg build/jig-erd-overview.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig-erd-summary.svg build/jig-erd-summary.png
      - run: sudo convert -font /usr/share/fonts/opentype/ipafont-mincho/ipam.ttf build/jig-erd-detail.svg build/jig-erd-detail.png

      - run: curl -X POST -F channel=${SLACK_CANNEL} -F token=${SLACK_TOKEN} -F text=https://github.com/system-sekkei/library https://slack.com/api/chat.postMessage
      - run: curl -X POST -F file=@build/jig/business-rule.xlsx -F channels=${SLACK_CANNEL} -F token=${SLACK_TOKEN} https://slack.com/api/files.upload
      - run: curl -X POST -F file=@build/jig/application.xlsx -F channels=${SLACK_CANNEL} -F token=${SLACK_TOKEN} https://slack.com/api/files.upload
      - run: for file in $(ls converted); do curl -X POST -F file=@converted/${file} -F channels=${SLACK_CANNEL} -F token=${SLACK_TOKEN} https://slack.com/api/files.upload; done;

      - run: curl -X POST -F file=@build/jig-erd-overview.png -F channels=${SLACK_CANNEL} -F token=${SLACK_TOKEN} https://slack.com/api/files.upload
      - run: curl -X POST -F file=@build/jig-erd-summary.png -F channels=${SLACK_CANNEL} -F token=${SLACK_TOKEN} https://slack.com/api/files.upload
      - run: curl -X POST -F file=@build/jig-erd-detail.png -F channels=${SLACK_CANNEL} -F token=${SLACK_TOKEN} https://slack.com/api/files.upload

      - store_artifacts:
          path: build/jig/
          destination: jig

      - store_artifacts:
          path: build/reports/
          destination: reports

workflows:
  version: 2
  build_and_post_slack:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages